.char-section {
  &__header {
    position: relative;
    padding: $gutter;
  }
  &__help-button {
    padding: 0 0 0 var(--gutter);
    background: none;
    border: 0 none;

    &--active {
      color: var(--c-contrast);
    }
    .svg-icon {
      fill: currentColor;
    }
  }
  &__list {
    --min-size: 25%;
    margin: 0;
    padding: 0;
    border: solid $c-grey-light;
    border-width: 1px 0 0;
    display: flex;
    flex-wrap: wrap;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax( var(--min-size), 1fr));

    @media $mq-big {
      // we could have use a px size
      // but with this we can't know for sure how many colums there will be
      // and without a row selector we can't have a clean way of doing this
      // https://github.com/w3c/csswg-drafts/issues/1943
      --min-size: (100%/7);
    }
  }
  &__item {
    list-style: none;
    border: 1px solid $c-grey-light;
    border-width: 0 1px 1px  0;
    cursor: pointer;
    position: relative;

    @media $mq-small {
      &:nth-child(4n + 4) {
        border-width: 0 0 1px 0;
      }
      &:nth-child(8n + 1),
      &:nth-child(8n + 2),
      &:nth-child(8n + 3),
      &:nth-child(8n + 4) {
        background: $c-grey-lightest;
      }
    }

    @media $mq-big {

      &:nth-child(7n + 7) {
        border-width: 0 0 1px 0;
      }
      &:nth-child(14n + 1),
      &:nth-child(14n + 2),
      &:nth-child(14n + 3),
      &:nth-child(14n + 4),
      &:nth-child(14n + 5),
      &:nth-child(14n + 6),
      &:nth-child(14n + 7) {
        background: $c-grey-lightest;
      }
    }

    p {
      margin: 0;
      text-align: center;
    }

    .thai-letter {
      --char-size: 2.5vw;
      flex-grow: 1;
      display: flex;
      flex-center();
      font-size: var(--char-size);

      @media $mq-big {
        --char-size: 1em;
      }
    }
  }

  &__item-link {
    display: flex;
    flex-direction: column;
    min-height: 25vw;
    color: currentColor;
    text-decoration: none;

    @media $mq-big {
      min-height: 140px;
    }
  }
}


.char-subsection {
  &__header {
    padding: $gutter $gutter $half-gutter;
    background: #f3f3f3;
  }
}
.preview-list-item-rtgs {
  font-size: 3vw;
  padding: .5em 0 .25em;
  white-space: pre;

  @media $mq-big {
    font-size: 16px;
  }

  .class-low &::before,
  .class-high &::before {
    content: '  ';
    visibility: hidden;
  }

  .class-high &::before,
  .class-high &::after {
    content: ' +';
    color: green;
  }
  .class-low &::before,
  .class-low &::after {
    content: ' â€“';
    color: red;
  }
}
.preview-list-item-meaning {
  color: $c-grey;
  font-size: 3vw;

  @media $mq-big {
    font-size: 16px;
  }
}

.consonant-explanation {
  position: fixed;
  top: 0;
  right: 0;
  bottom: var(--nav-height);
  left: 0;
  background: rgba(0, 0, 0, .75);
  display: flex;
  flex-center();

  &__content {
    max-width: 90%;
    max-height: 90%;
  }

  &__close {
    position: absolute;
    top: var(--half-gutter);
    right: var(--half-gutter);
    fill: white;
  }
}
